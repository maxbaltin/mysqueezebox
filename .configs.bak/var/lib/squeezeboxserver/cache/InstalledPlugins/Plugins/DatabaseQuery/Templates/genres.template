<?xml version="1.0" encoding="utf-8"?>
<databasequery>
	<dataquery>
		<name>[% queryname %]</name>
		<querytree>
			<queryid>genre</queryid>
			<query>
				select genres.id,genres.name[% IF showartistsort %],genres.namesort[% END %],count(distinct tracks.id) as nooftracks from genres
					left join genre_track on
						genres.id=genre_track.genre
					left join tracks on
						genre_track.track=tracks.id
					left join albums on
						albums.id=tracks.album
				where
					genres.id is not null
					[% IF withtracks %]
					and tracks.audio=1 
					[% END %]
					[% IF withouttracks %]
					and tracks.id is null 
					[% END %]
					[% IF withalbums %]
					and albums.id is not null
					[% END %]
					[% IF withoutalbums %]
					and (albums.id is null or albums.title='No Album')
					[% END %]
					[% IF withcompilation %]
					and albums.compilation is not null 
					[% END %]
					[% IF withoutcompilation %]
					and albums.compilation is null 
					[% END %]
				group by genres.id
				order by genres.namesort
			</query>
			<querytree>
				<queryid>artist</queryid>
				<query>
					select contributors.id,contributors.name[% IF showartistsort %],contributors.namesort[% END %][% IF showmusicbrainz %],contributors.musicbrainz_id[% END %][% IF showroles %],group_concat(distinct if(contributor_track.role in (1,5,6),'Artist',if(contributor_track.role=3,'Conductor',if(contributor_track.role=2,'Composer','Band')))[% IF MySQL %] order by contributor_track.role desc[% END %]) as roles[% END %],count(distinct tracks.id) as nooftracks from contributors
						join contributor_track on
							contributors.id=contributor_track.contributor
							[%- IF roles %]
							and contributor_track.role in ([% roles %])
							[%- END %]
						join genre_track on
							contributor_track.track=genre_track.track and
							genre_track.genre={genre}
						join tracks on
							contributor_track.track=tracks.id
						join albums on
							albums.id=tracks.album
					where
						contributors.id is not null
						[% IF roles %]
						and contributor_track.role in ([% roles %])
						[% END %]
						[% IF withcompilation %]
						and albums.compilation is not null 
						[% END %]
						[% IF withoutcompilation %]
						and albums.compilation is null 
						[% END %]
					group by contributors.id
					order by contributors.namesort
				</query>
				<querytree>
					<queryid>album</queryid>
					<query>
						select albums.id,albums.title[% IF showartistsort %],albums.titlesort[% END %][% IF showyear %],if(albums.year=0,null,albums.year) as year[% END %][% IF showmusicbrainz %],albums.musicbrainz_id[% END %],count(distinct tracks.id) as nooftracks from tracks
							join albums on
								tracks.album=albums.id
							join genre_track on
								tracks.id=genre_track.track and
								genre_track.genre={genre}
							join contributor_album on
								contributor_album.contributor={artist} and
								contributor_album.album=albums.id 
								[%- IF roles %]
								and contributor_album.role in ([% roles %])
								[%- END %]
						where
							albums.id is not null
						group by albums.id
						order by albums.titlesort
					</query>
					<querytree>
						<queryid>track</queryid>
						<query>
							select tracks.id,tracks.tracknum,tracks.title[% IF showartistsort %],tracks.titlesort[% END %][% IF showmusicbrainz %],tracks.musicbrainz_id[% END %] from tracks
								join genre_track on
									tracks.id=genre_track.track and
									genre_track.genre={genre}
								join contributor_track on
									contributor_track.contributor={artist} and
									contributor_track.track=tracks.id 
									[%- IF roles %]
									and contributor_track.role in ([% roles %])
									[%- END %]
								join albums on
									tracks.album={album}
							where
								tracks.id is not null
							group by tracks.id
							order by tracks.titlesort
						</query>
					</querytree>
				</querytree>
			</querytree>
		</querytree>
	</dataquery>
</databasequery>

