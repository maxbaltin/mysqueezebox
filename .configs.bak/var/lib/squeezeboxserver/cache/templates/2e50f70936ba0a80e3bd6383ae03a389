#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => '/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html',
        'modtime' => '1249312473',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $context->process('settings/header.html');
    $output .=  "\n\n	";
#line 14 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<select class=\"stdedit\" name=\"logging_group\">\n\n			<option value=\"\">";
#line 6 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'DEBUG_SELECT_SET';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>\n			<option value=\"DEFAULT\">";
#line 7 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'DEBUG_DEFAULT';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>\n\n			";
#line 11 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('logging_groups');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n			<option value=\"";
#line 10 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 10 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0, 'label', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "		\n		</select>\n	";
        $context->include('setting', { 'title' => 'DEBUGGING_SETTINGS', 'desc' => 'SETUP_GROUP_DEBUG_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n\n	";
#line 31 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('logs');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'item'} = $_tt_value;
    $output .=  "\n		";
#line 30 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    if ($stash->get(['item', 0, 'items', 0, 1, 0])) {
    $output .=  "\n			";
#line 29 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<div class=\"prefDesc\">\n					<a href=\"/";
#line 21 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'items', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".log\" target=\"log\">";
#line 21 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['item', 0, 'items', 0, 1, 0]);
    $output .=  "</a>\n					(<a href=\"/";
#line 22 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'items', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".log?lines=100\" target=\"log\">100</a>,\n					<a href=\"/";
#line 23 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'items', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".log?lines=500\" target=\"log\">500</a>,\n					<a href=\"/";
#line 24 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'items', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".log?lines=1000\" target=\"log\">1000</a>\n					";
#line 25 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'LINES';
        
        &$_tt_filter($output);
    };
    
    $output .=  ",\n					<a href=\"/";
#line 26 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'keys', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".log?full=1\">";
#line 26 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'EVERYTHING';
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>,\n					<a href=\"/";
#line 27 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['item', 0, 'keys', 0, 0, 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ".log?zip=1\">";
#line 27 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_LOG_ZIPPED';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>)\n				</div>\n			";
        $context->include('setting', { 'title' => ("SETUP_DEBUG_" . $stash->get(['item', 0, 'items', 0, 0, 0]) . "_LOG"), 'desc' => ("SETUP_DEBUG_" . $stash->get(['item', 0, 'items', 0, 0, 0]) . "_LOG_DESC"), 'content', $output }); 
    };
    
    $output .=  "\n		";
    }
    
    $output .=  "\n	";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n\n	<p><hr></p>\n\n	";
#line 41 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<div>\n			<input name=\"persist\" id=\"persist\" type=\"checkbox\" ";
#line 38 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    if ($stash->get('persist')) {
    $output .=  " checked=\"1\" ";
    }
    
    $output .=  ">\n			";
#line 39 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PERSIST_DEBUG_SETTINGS';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n		</div>\n	";
        $context->include('setting', { 'title' => 'DEBUGGING_ADVANCED', 'desc' => 'SETUP_GROUP_DEBUG_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	<div class = \"settingSection\">\n	";
#line 58 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('categories');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'category'} = $_tt_value;
    $output .=  "\n\n		<p>\n		<select class=\"stdedit\" name=\"";
#line 47 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['category', 0, 'name', 0]);
    $output .=  "\" id=\"";
#line 47 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['category', 0, 'name', 0]);
    $output .=  "\">\n";
#line 51 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('logLevels');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'value'} = $_tt_value;
    $output .=  "			<option ";
#line 50 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    if ($stash->get('value') eq $stash->get(['category', 0, 'current', 0])) {
    $output .=  "selected";
    }
    
    $output .=  " value=\"";
#line 50 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get('value');
    $output .=  "\">";
#line 0 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  ("SETUP_DEBUG_LEVEL_" . $stash->get('value'));
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n		</select>\n\n		<label for=\"";
#line 55 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['category', 0, 'name', 0]);
    $output .=  "\" class=\"stdlabel\">(";
#line 55 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['category', 0, 'name', 0]);
    $output .=  ") - ";
#line 55 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $stash->get(['category', 0, 'label', 0]);
    $output .=  "</label>\n		</p>\n\n	";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n	</div>\n\n";
#line 61 "/usr/share/squeezeboxserver/HTML/EN/settings/server/debugging.html"
    $output .=  $context->process('settings/footer.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
