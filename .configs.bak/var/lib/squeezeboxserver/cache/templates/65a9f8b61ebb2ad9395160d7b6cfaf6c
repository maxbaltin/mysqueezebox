#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => '/usr/share/squeezeboxserver/HTML/Default/search.html',
        'modtime' => '1518618963',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # CAPTURE
    $stash->set('pagetitle', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SEARCHMUSIC';
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 2 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $stash->set('pageicon', $stash->get(['icons', 0, 'SEARCHMUSIC', 0]));
    $output .=  "\n";
#line 98 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # CAPTURE
    $stash->set('extJsScripts', do {
        my $output = '';
    $output .=  "\n	<script type=\"text/javascript\">\n		Ext.onReady(function(){\n			var sinput = new Ext.form.TextField({\n				applyTo: 'livesearch',\n				validationDelay: 500,\n				validateOnBlur: false,\n				selectOnFocus: true,\n\n				searches: [\n					";
#line 19 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('searches');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'search'} = $_tt_value;
    $output .=  "\n					{\n						id: 'result";
#line 15 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "',\n						hd: 'header";
#line 16 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "',\n						url: '";
#line 17 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['search', 0, 'values', 0, 0, 0]);
    $output .=  "'\n					}";
#line 18 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['loop', 0, 'last', 0]) ? '' : ',';
    $output .=  "\n					";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				],\n\n				validator: function(value, force){\n					var el;\n\n					if (value.length > 2 || force) {\n						for (var i=0; i<this.searches.length; i++) {\n							if (el = Ext.get(this.searches[i].id)) {\n								// don't wait for an earlier update to finish\n								if (el.getUpdateManager().isUpdating())\n									el.getUpdateManager().abort();\n\n								el.load({\n									url: this.searches[i].url,\n									method: 'GET',\n									params: {\n										q: value,\n										player: player,\n										library_id: '";
#line 38 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get('library_id');
    $output .=  "',\n										ajaxUpdate: 1,\n										ajaxSearch: 1,\n										index: i\n									},\n									callback: function(el, success, response, options) {\n										Highlighter.init();\n										SqueezeJS.UI.ScrollPanel.init();\n\n										// we need to fix the URL, as the returned values are relative to the search path\n										var a = Ext.DomQuery.select(\"a[class=browseItemLink]\", options.thisSearch.id);\n										for (i=0; i<a.length; i++) {\n											a[i].href = a[i].href.replace(/index.html/g, \"clixmlbrowser/clicmd=browselibrary+items&linktitle=SEARCH&mode=search/\");\n										}\n										var l = Ext.DomQuery.select(\"div[class*=browsedbListItem]\", options.thisSearch.id).length;\n										var t = Ext.get(options.thisSearch.id).child('div[id=\"total\"]');\n										var c = t ? parseInt(t.getAttribute('value')) : 0;\n										var m = '';\n										if (!c) {\n											m = '";
#line 57 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'NONE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "';\n										} else if (l && c && c > 1 && l < c) {\n											m += l + ' / ' + c + ': <a href=\"clixmlbrowser/clicmd=browselibrary+items&linktitle=SEARCH&mode=search/X?index='\n												+ options.params.index + '&q=' + options.params.q + '\">";
#line 60 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'MORE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>...';\n										}\n										Ext.get(options.thisSearch.hd).update(m);\n\n									},\n									thisSearch : this.searches[i]\n								});\n							}\n						}\n					}\n\n					return true;\n				},\n\n				// overwrite default filter to ignore key modifiers\n			    filterValidation : function(e){\n			        if(!e.isNavKeyPress() && !e.isSpecialKey()){\n			            this.validationTask.delay(this.validationDelay);\n			        }\n			    }\n			});\n\n			";
#line 84 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    if ($stash->get(['query', 0, 'defined', 0]) && $stash->get('query') ne '') {
    $output .=  "\n			sinput.validator('";
#line 83 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('replace', [ '\'', ' ' ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('query');
        
        &$_tt_filter($output);
    };
    
    $output .=  "', true);\n			";
    }
    
    $output .=  "\n\n			new Ext.Button({\n				renderTo: 'searchButton',\n				text: '";
#line 88 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SEARCH';
        
        &$_tt_filter($output);
    };
    
    $output .=  "',\n				type: 'submit',\n				handler: function(){\n					document.getElementById(\"searchForm\").submit();\n				}\n			});\n\n			Browse.init();\n		});\n	</script>\n";
        $output;
    });
    
    $output .=  "\n";
#line 101 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # CAPTURE
    $stash->set('pwd_list', do {
        my $output = '';
    $output .=  "\n	<a href=\"search.html?player=";
#line 100 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get('playerURI');
    $output .=  "\">";
#line 100 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SEARCH';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a>\n";
        $output;
    });
    
    $output .=  "\n";
#line 102 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $context->process('pageheader.html', { 'dontscroll' => $stash->get(['browse_items', 0, 'size', 0]), 'useSpecialExt' => '-browse' });
    $output .=  "\n\n	<div class=\"searchHeader\">\n	<form id=\"searchForm\" name=\"searchForm\" method=\"GET\" action=\"search.html\">\n		<table><tr>\n			<td><input type=\"text\" id=\"livesearch\" name=\"query\" size=\"30\" value=\"";
#line 107 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('query');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" autocomplete=\"off\"/></td>\n			<td><span id=\"searchButton\"></span></td>\n			<td id=\"advSearchLink\" class=\"link\"><a href=\"";
#line 109 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get('webroot');
    $output .=  "advanced_search.html?player=";
#line 109 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get('playerid');
    $output .=  "\">";
#line 109 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'ADVANCEDSEARCH';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a></td>\n		</tr></table>\n		<input type=\"hidden\" value=\"";
#line 111 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get('player');
    $output .=  "\" name=\"player\">\n	</form>\n	</div>\n\n	<div id=\"browsedbHeader\">\n		";
#line 118 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    if ($stash->get('searchError')) {
    $output .=  "\n			";
#line 117 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get('searchError');
    $output .=  "\n		";
    }
    
    $output .=  "\n	</div>\n\n	<div id=\"browsedblist\">\n	";
#line 125 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('searches');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'search'} = $_tt_value;
    $output .=  "\n		<div class=\"searchResultHeader\">";
#line 123 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['search', 0, 'keys', 0, 0, 0]);
    $output .=  ": <span id=\"header";
#line 123 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\"></span></div>\n		<div id=\"result";
#line 124 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\"></div>\n	";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n	</div>\n\n";
#line 128 "/usr/share/squeezeboxserver/HTML/Default/search.html"
    $output .=  $context->process('pagefooter.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
