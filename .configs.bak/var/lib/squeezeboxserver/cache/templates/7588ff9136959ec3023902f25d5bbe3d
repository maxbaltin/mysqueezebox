#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1518618964',
        'name' => '/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    
    $output .=  "\n";
#line 226 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    if ($stash->get('ajaxRequest')) {
#line 16 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $context->process('statusInfo');
    }
    else {
#line 17 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # CAPTURE
    $stash->set('pagetitle', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOMPLAY';
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
#line 17 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $stash->set('pageicon', $stash->get(['icons', 0, 'PLUGIN_RANDOMPLAY', 0]));
#line 24 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # CAPTURE
    $stash->set('pageHeaderScripts', do {
        my $output = '';
    $output .=  "\n	<script TYPE=\"text/javascript\">";
#line 19 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $context->process('html/vars.js');
    $output .=  "</script>\n	<script type=\"text/javascript\" src=\"";
#line 20 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/prototype.js?r=";
#line 20 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('revision');
    $output .=  "\" ></script>\n	<script TYPE=\"text/javascript\" src=\"";
#line 21 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/global.js?r=";
#line 21 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('revision');
    $output .=  "\"></script>\n	<script TYPE=\"text/javascript\" src=\"";
#line 22 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/common.js?r=";
#line 22 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('revision');
    $output .=  "\"></script>\n	<script TYPE=\"text/javascript\" src=\"";
#line 23 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/home.js?r=";
#line 23 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('revision');
    $output .=  "\" ></script>\n";
        $output;
    });
    
    $output .=  "\n";
#line 43 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # CAPTURE
    $stash->set('extJsScripts', do {
        my $output = '';
    $output .=  "\n<script type=\"text/javascript\">\n	var RandomPlay = function(){\n		return {\n			mix: function(type, addOnly) {\n				SqueezeJS.UI.setProgressCursor();\n				document.genreForm.type.value = type;\n				document.genreForm.addOnly.value = addOnly;\n				Ext.get('randomStatus').load(\n					document.genreForm.action,\n					'ajaxRequest=1&' + Ext.Ajax.serializeForm('genreForm'),\n					refreshStatus,\n					true\n				);\n			}\n		}\n	}();\n</script>\n";
        $output;
    });
    
#line 48 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # CAPTURE
    $stash->set('pwd_list', do {
        my $output = '';
    $output .=  "/\n	<a href=\"";
#line 45 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('webroot');
    $output .=  "plugins/RandomPlay/list.html?player=";
#line 45 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('player');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n		";
#line 46 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOMPLAY';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n	</a>\n";
        $output;
    });
    
#line 54 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # CAPTURE
    $stash->set('pageHeaderInfo', do {
        my $output = '';
#line 53 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    if ($stash->get('pluginRandomNowPlaying') ne '') {
    $output .=  "\n		<strong>";
#line 51 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'NOW_PLAYING';
        
        &$_tt_filter($output);
    };
    
#line 51 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'COLON';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</strong>\n		<span class=\"exboldnowplaying\">";
#line 52 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('upper')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_'  . $stash->get('pluginRandomNowPlaying');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</span>\n	";
    }
    
        $output;
    });
    
#line 55 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $context->process('pageheader.html');
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
#line 224 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    if ($stash->get('player') eq '') {
    $output .=  "\n	<p>";
#line 83 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'NO_PLAYER_FOUND';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</p>\n";
    }
    else {
    $output .=  "\n\n	<form action=\"";
#line 86 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('webroot');
    $output .=  "plugins/RandomPlay/settings.html\" name=\"genreForm\" id=\"genreForm\">\n		<input type=\"hidden\" name=\"type\" value=\"\">\n		<input type=\"hidden\" name=\"addOnly\" value=\"0\">\n		<input type=\"hidden\" name=\"player\" value=\"";
#line 89 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('player');
    $output .=  "\">\n\n		<p>";
#line 91 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_CHOOSE_BELOW';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</p>\n\n		";
#line 93 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $stash->set('odd', 1);
#line 113 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		";
#line 112 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('mixTypes');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
    $output .=  "\n			";
#line 96 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get(['mixTypeMap', 0, 'type', 0]);
#line 96 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # CAPTURE
    $stash->set('title', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_'  . $stash->get('type')  . '_WEB';
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n			";
    
#line 110 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				";
#line 109 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('title');
    $output .=  "\n			";
        $context->include('contentitem', { 'controls' => 'controls', 'content', $output }); 
    };
    
    $output .=  "\n			";
#line 111 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $stash->set('odd', (! $stash->get('odd')));
    $output .=  "\n		";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n		";
        $context->include('contentcontainer', { 'listid' => 'inlineList', 'content', $output }); 
    };
    
    $output .=  "\n\n		<div id=\"randomStatus\">\n		";
#line 116 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $context->process('statusInfo');
    $output .=  "\n		</div>\n\n		<hr>\n\n		<p>\n			<input class=\"stdedit\" type=\"checkbox\" name=\"continuousMode\" id=\"continuousMode\" value=\"1\"\n			";
#line 123 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    if ($stash->get('pluginRandomContinuousMode')) {
    $output .=  "checked";
    }
    
    $output .=  ">\n			<label for=\"continuousMode\">";
#line 124 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_CONTINUOUS_MODE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label>\n		</p>\n\n\n\n		<p>";
#line 129 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_GENRE_FILTER_WEB';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</p>\n	\n		";
#line 131 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $stash->set('odd', 1);
    $output .=  "\n		<table border=\"0\" width=\"100%\">";
#line 132 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    # USE
    $stash->set('table',
                $context->plugin('table', [ $stash->get('pluginRandomGenreListSort'), { 'cols' => 2, 'pad' => 0 } ]));
#line 142 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['table', 0, 'rows', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'genrerow'} = $_tt_value;
    $output .=  "\n				<tr class=\"";
#line 134 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\">";
#line 139 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('genrerow');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'genre'} = $_tt_value;
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $stash->set('genreid', 'genre_'  . $stash->get(['pluginRandomGenreList', 0, 'item', [ ('' . $stash->get('genre')) ], 'id', 0]));
    $output .=  "\n					<td><input type=\"checkbox\" name=\"";
#line 137 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('genreid');
    $output .=  "\" id=\"";
#line 137 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('genreid');
    $output .=  "\" value=\"1\" ";
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get(['pluginRandomGenreList', 0, 'item', [ ('' . $stash->get('genre')) ], 'enabled', 0]) ? 'checked' : '';
    $output .=  " onclick=\"changeNumSelected(this)\">\n					<label for=\"";
#line 138 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('genreid');
    $output .=  "\">";
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['pluginRandomGenreList', 0, 'item', [ ('' . $stash->get('genre')) ], 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label></td>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</tr>\n				";
#line 141 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $stash->set('odd', (! $stash->get('odd')));;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n		</table>\n\n		<script type=\"text/javascript\">\n		<!--\n			var f = document.genreForm;\n			var numSelected = 0;\n			var numCheckBoxes = 0;\n			var selectAllString = '";
#line 150 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_SELECT_ALL';
        
        &$_tt_filter($output);
    };
    
    $output .=  "';\n			var selectNoneString = '";
#line 151 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_SELECT_NONE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "';\n\n			// Work out how many checkboxes are initially selected\n			for (var i=0; i < f.elements.length; i++) {\n				if (f.elements[i].type == 'checkbox') {\n					numCheckBoxes++;\n					if (f.elements[i].checked) {\n						numSelected++;\n					}\n				}\n			}\n\n			// Select none if all are selected, else select all\n			function selectAll() {\n				var newState = numSelected != numCheckBoxes;\n\n				for (var i=0; i < f.elements.length; i++) {\n					if (f.elements[i].type == 'checkbox' && f.elements[i].name != 'continuousMode') {\n						f.elements[i].checked = newState;\n					}\n				}\n				if (newState) {\n					numSelected = numCheckBoxes;\n					f.selectAllButton.value = selectNoneString;\n				} else {\n					numSelected = 0;\n					f.selectAllButton.value = selectAllString;\n				}\n			}\n\n			// Increase/decrease num selected every time a checkbox changes\n			function changeNumSelected(checkBox) {\n				if (checkBox.checked) {\n					numSelected++;\n				} else {\n					numSelected--;\n				}\n\n				if (numSelected == numCheckBoxes) {\n				  f.selectAllButton.value = selectNoneString;\n				} else {\n					f.selectAllButton.value = selectAllString;\n				}\n			}\n\n			// Write the button using js, so it won't appear if js isn't enabled/available\n			document.write('<p><input type=\"button\" value=\"'\n						   + (numSelected == numCheckBoxes ? selectNoneString : selectAllString)\n										 + '\" id=\"selectAllButton\" onclick=\"selectAll()\"></p>');\n		// -->\n		</script>\n\n		";
#line 212 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    if ($stash->get('libraries')) {
    $output .=  "\n			<p>";
#line 204 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_LIBRARY_FILTER';
        
        &$_tt_filter($output);
    };
    
#line 204 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'COLON';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n				<select class=\"stdedit\" name=\"useLibrary\" id=\"useLibrary\">\n					<option value=\"\">&nbsp;</option>\n					";
#line 209 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['libraries', 0, 'keys', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'value'} = $_tt_value;
    $output .=  "\n					<option ";
#line 208 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    if ($stash->get('value') eq $stash->get('pluginRandomUseLibrary')) {
    $output .=  "selected";
    }
    
    $output .=  " value=\"";
#line 208 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('value');
    $output .=  "\">";
#line 208 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get(['libraries', 0, $stash->get('value'), 0]);
    $output .=  "</option>\n					";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n			</p>\n		";
    }
    
    $output .=  "\n\n		<p>\n			";
#line 215 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_BEFORE_NUM_TRACKS';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n			<input class=\"stdedit\" type=\"text\" size=\"2\" name=\"numTracks\" value=\"";
#line 216 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('pluginRandomNumTracks');
    $output .=  "\">\n			";
#line 217 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_AFTER_NUM_TRACKS';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n			<input class=\"stdedit\" type=\"text\" size=\"2\" name=\"numOldTracks\" value=\"";
#line 218 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $stash->get('pluginRandomNumOldTracks');
    $output .=  "\">\n			";
#line 219 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_RANDOM_AFTER_NUM_OLD_TRACKS';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n		</p>\n\n		<p><input type=\"submit\" value=\"";
#line 222 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SAVE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"></p>\n	</form>\n";
    }
    
    $output .=  "\n";
#line 225 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
    $output .=  $context->process('pagefooter.html');
    $output .=  "\n";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'statusInfo' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	";
#line 14 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        if ($stash->get('pluginRandomNowPlaying') ne '') {
        $output .=  "\n		";
        $output .=  "\n		<script type=\"text/javascript\">\n			<!--\n			refreshStatus();\n			-->\n		</script>\n\n		<p><em>\n			";
#line 11 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'PLUGIN_RANDOM_GENERAL_HELP';
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n			";
#line 12 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $context->process('randomLink', { 'type' => 'disable', 'addOnly' => '0' });
        $output .=  "\n		</em></p>\n	";
        }
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'controls' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n				";
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $stash->set('itemobj', { 'url' => ("randomplay://" . $stash->get('type')), 'title' => $stash->get('title')  });
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $context->process('favoritescontrol', { 'isFavorite' => $stash->get(['favorites', 0, $stash->get('type'), 0]) });
        $output .=  "\n				";
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $context->process('randomLink', { 'type' => ('' . $stash->get('type')), 'addOnly' => '0' });
        $output .=  "\n				";
#line 0 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $context->process('randomLink', { 'type' => ('' . $stash->get('type')), 'addOnly' => '1' });
        $output .=  "\n			";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'randomLink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	";
#line 72 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        if ($stash->get('addOnly')) {
#line 72 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $stash->set('link', 'addlink');
        }
        else {
#line 72 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $stash->set('link', 'playlink');
        }
        
        $output .=  "\n	";
#line 79 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        if ($stash->get('type') eq 'disable') {
        $output .=  "\n		<a ";
#line 74 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $context->process('href');
        $output .=  " >";
#line 74 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'PLUGIN_RANDOM_'  . $stash->get('pluginRandomNowPlaying')  . '_DISABLE';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n	";
        }
        else {
        $output .=  "\n		";
#line 78 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			";
#line 77 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $context->process('href');
        $output .=  "\n		";
            $context->include($stash->get('link'), { 'noTarget' => 1, 'content', $output }); 
        };
        
        $output .=  "\n	";
        }
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'href' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n";
#line 68 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        if ($stash->get('useExtJS')) {
        $output .=  "\nhref=\"javascript:RandomPlay.mix('";
#line 61 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('type');
        $output .=  "', '";
#line 61 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('addOnly');
        $output .=  "');\"\n";
        }
        else {
        $output .=  "\nhref=\"";
#line 63 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('webroot');
        $output .=  "plugins/RandomPlay/mix.html?type=";
#line 63 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('type');
        $output .=  "&amp;player=";
#line 63 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('player');
            
            &$_tt_filter($output);
        };
        
        $output .=  "&amp;addOnly=";
#line 63 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('addOnly');
        $output .=  "\"\n		 onclick='document.genreForm.type.value = \"";
#line 64 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('type');
        $output .=  "\";\n							document.genreForm.addOnly.value = ";
#line 65 "/usr/share/perl5/Slim/Plugin/RandomPlay/HTML/EN/plugins/RandomPlay/list.html"
        $output .=  $stash->get('addOnly');
        $output .=  "\n							document.genreForm.submit();\n							refreshStatus(); return false;'\n";
        }
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
