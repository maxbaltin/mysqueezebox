#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1518618963',
        'name' => '/usr/share/squeezeboxserver/HTML/EN/html/docs/http.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/EN/html/docs/http.html"
    $stash->set('pagetitle', 'Logitech Media Server Web Interface');
    $output .=  "\n";
#line 2 "/usr/share/squeezeboxserver/HTML/EN/html/docs/http.html"
    $stash->set('techinfo', '1');
    $output .=  "\n";
#line 3 "/usr/share/squeezeboxserver/HTML/EN/html/docs/http.html"
    $stash->set('lefttoright', '1');
    $output .=  "\n";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/html/docs/http.html"
    $output .=  $context->process('helpheader.html');
    $output .=  "\n\n<h4>Overview</h4>\n<p>This document describes the interface to the HTTP server that's built into \n  the Logitech Media Server. </p>\n<p>Logitech Media Server provides an HTTP server that can be used to:</p>\n<ol>\n  <li> Browse the music library. </li>\n  <li> View the status and playlist of the player.</li>\n  <li> Control the player.</li>\n  <li>Configure the server.</li>\n</ol>\n<p>When the server is started, it starts listening for HTTP connections \n  on the default port of 9000. </p>\n<p>The HTTP server may be accessed by the user with a traditional web browser \n  to navigate around the music library and control the player. The HTTP server \n  may also be used in conjunction with another software application (<i>wget</i> \n  or <i>curl</i>, for example) as a way to access and control the player via HTTP.\n  The server can return XML instead of HTML for such \"automation\" uses (see \n  <a href=\"xml_skin.html\">The XML Skin</a> documentation.)</p>\n<p> In the examples in this document the server is running on a computer \n  with the IP address of 10.0.1.201.</p>\n<h4>HTTP Access</h4>\n<p>To access the main page to control the player via a web browser use this URL: \n</p>\n<pre>http://10.0.1.201:9000/</pre>\n<p>This provides a frameset containing two pages, one for browsing the music library:\n</p>\n<pre>http://10.0.1.201:9000/browse.html</pre>\n<p>Navigation through the browser to subdirectories in the music library uses \n  a URL parameter called &quot;dir&quot; to specify a subdirectory, for example:\n</p>\n<pre>http://10.0.1.204:9000/browse.html?dir=%2fAl%20Green%2fGreatest%20Hits </pre>\n<p>provides access to browse the subdirectory &quot;Greatest Hits&quot; directory \n  within the &quot;Al Green&quot; subdirectory under the main music directory. \n  There are additional web pages and URLs used to browse the music library by \n  genre, artist and album as well as configuration and user preference settings \n  and online help.</p>\n<p>The other frame within the main frameset is at this URL:</p>\n<pre>http://10.0.1.201:9000/status.html </pre>\n<p>Which displays the status of the player, including the current song and playlist.\n</p>\n<p>Control of the player uses another set of URLs, all of which may return some \n  status information. They are in the format: </p>\n<pre>http://10.0.1.201:9000/status.suffix?p0=param&amp;p1=param1&amp;p2=param2&amp;p3=param3 </pre>\n<p>where &quot;status&quot; indicates that player status will be returned, and \n  p0,p1, p2, p3, and p4 are parameters used that command. </p>\n<p>If the &quot;suffix&quot; is .html then the response will be the current player's \n  status in HTML. If the &quot;suffix&quot; is .m3u then the response will be \n  the player's current playlist as an .m3u file. If the suffix is &quot;.txt&quot; \n  then the response will consist of two lines of text corresponding to the text \n  on the player's display. If the suffix is omitted, then the response will be the \n  empty.</p>\n		<p><b>Note: </b>Commands that use paths to songs or playlists can use relative paths from the root of the Music Library folder to specify songs.  For example, if the Music Library is specified as &quot;D:\\mymusic&quot; and you'd like to refer to a song in that folder named &quot;foo.mp3&quot;  you can specify just &quot;foo.mp3&quot; in the command parameter.  Likewise, to refer to items in the Saved Playlist folder, you can use a prefix of  &quot;__playlists/&quot; before the path.  For example, to refer to the saved playlist &quot;bar.m3u&quot; in the Saved Playlists folder, you can specify a path of &quot;__playlists/bar.m3u&quot;.</p>\n		<h4>Commands</h4>\n<p>The following is a summary of the supported commands. Additional information\n  about the command set is available in the <a href=\"cli-api.html\">Logitech Media Server\n  Command Line Interface </a>documentation.</p>\n<table border=\"1\" cellspacing=0 cellpadding=3>\n  <tr> \n    <td width=\"37\"><b> p0</b></td>\n    <td width=\"49\"><b> p1</b></td>\n    <td width=\"96\"><b>p2</b></td>\n    <td width=\"69\"><b>p3</b></td>\n    <td width=\"13\"><b>p4</b></td>\n    <td width=\"672\"><b>Description</b></td>\n  </tr>\n  <tr> \n    <td width=\"37\"> play</td>\n    <td width=\"49\">&nbsp;</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Start the player playing</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> pause</td>\n    <td width=\"49\"> (0|1|)</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Pause/unpause player. p1=1 to pause, p1=0 to unpause, omit \n      p1 to toggle</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> stop</td>\n    <td width=\"49\">&nbsp;</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Stop the player</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> sleep</td>\n    <td width=\"49\"> (0..n)</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">(Play for p1 seconds and then sleep</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> playlist</td>\n    <td width=\"49\"> play</td>\n    <td width=\"96\">&lt;item&gt;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Replace the current playlist with the song, playlist or directory specified by p2</td>\n  </tr>\n  <tr> \n    <td width=\"37\">playlist</td>\n    <td width=\"49\">add</td>\n    <td width=\"96\">&lt;item&gt;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Append the song, playlist or directory specified by p2 to the end of the current playlist</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> playlist </td>\n    <td width=\"49\">insert</td>\n    <td width=\"96\">&lt;item&gt;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Insert the song, playlist or directory specified by p2 to be played immediately after the current song.</td>\n  </tr>\n	<tr>\n		<td width=\"37\">playlist</td>\n		<td width=\"49\">resume</td>\n		<td width=\"96\">&lt;playlist&gt;</td>\n		<td width=\"69\"></td>\n		<td width=\"13\"></td>\n		<td width=\"672\">Replace the current playlist with the playlist specified by p2, starting at the song that was playing when the file was saved. (Resuming works only with M3U files saved with the playlist save command below.) Shortcut: use a bare playlist name (without leading directories or trailing .m3u suffix to load a playlist in the saved playlists folder.</td>\n	</tr>\n	<tr> \n    <td width=\"37\">playlist</td>\n    <td width=\"49\">loadalbum</td>\n    <td width=\"96\">&lt;genre&gt;</td>\n    <td width=\"69\">&lt;artist&gt;</td>\n    <td width=\"13\">&lt;album&gt;</td>\n    <td width=\"672\">Replace the current playlist with all songs for a given genre, \n      artist, and album. Use a value of &quot;*&quot; for p2, p3, or p4 as a wildcard. \n      Note: the server's cache must contain the items for this to work.</td>\n  </tr>\n	<tr>\n		<td width=\"37\">playlist</td>\n		<td width=\"49\">save</td>\n		<td width=\"96\">&lt;playlist&gt;</td>\n		<td width=\"69\"></td>\n		<td width=\"13\"></td>\n		<td width=\"672\">Save a playlist file in the saved playlists directory.  Accepts a playlist filename (without .m3u suffix) and saves in the top level of the playlists directory.</td>\n	</tr>\n	<tr> \n    <td width=\"37\">playlist</td>\n    <td width=\"49\">addalbum</td>\n    <td width=\"96\">&lt;genre&gt;</td>\n    <td width=\"69\">&lt;artist&gt;</td>\n    <td width=\"13\">&lt;album&gt;</td>\n    <td width=\"672\">Add all songs for a given genre, artist, and album. Use a \n      value of &quot;*&quot; for p2, p3, or p4 as a wildcard. Note: the server's \n      cache must contain the items for this to work.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> playlist </td>\n    <td width=\"49\">clear</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Clear the current playlist</td>\n  </tr>\n  <tr> \n    <td width=\"37\">playlist</td>\n    <td width=\"49\">repeat</td>\n    <td width=\"96\">(0|1|2|)</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Change the repeat mode. p1=0 no repeat, stop at the end of \n      the playlist, p1=1 repeat the current song, p1=2 repeat the entire playlist. \n      Omit p1 to cycle through values.</td>\n  </tr>\n  <tr> \n    <td width=\"37\">playlist</td>\n    <td width=\"49\">shuffle</td>\n    <td width=\"96\">(0|1|2|)</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Shuffle the playlist. p1=0 no shuffle, p1=1 shuffle songs \n      in the playlist, p1=2 shuffle albums in the playlist. Omit p1 to toggle shuffle mode.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> playlist</td>\n    <td width=\"49\">move</td>\n    <td width=\"96\">&lt;fromoffset&gt;</td>\n    <td width=\"69\"> &lt;tooffset&gt;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Move the song in the offset specified by p2 to the offset \n      specified by p3 in the playlist.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> playlist </td>\n    <td width=\"49\">delete</td>\n    <td width=\"96\">&lt;songoffset&gt;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Delete the song in the playlist at the offset specified by p2</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> playlist</td>\n    <td width=\"49\">jump</td>\n    <td width=\"96\"> &lt;index&gt;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Make the song at the offset specified by p2 in the playlist \n      the currently playing song</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> mixer</td>\n    <td width=\"49\">volume</td>\n    <td width=\"96\"> (0 .. 100)|(-100 .. +100)</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Adjust the volume as specified by p2 within the range 0 to \n      100. Prefix the number with a + or - to make the change relative.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> mixer </td>\n    <td width=\"49\">balance</td>\n    <td width=\"96\"> (0 .. 100)|(-100 .. +100)</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\"><i>(not implemented)</i> Adjust the volume as specified by \n      p2 within the range 0 (most left) to 100 (most right). Prefix the number \n      with a + or - to make the change relative. A value 50 means no balance adjustment.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> mixer</td>\n    <td width=\"49\">base</td>\n    <td width=\"96\"> (0 .. 100)|(-100 .. +100)</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\"><i>(not implemented)</i> Adjust the base boost/cut as specified \n      by p2 within the range 0 to 100. Prefix the number with a + or - to make \n      the change relative. A value of 50 means no boost or cut.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> mixer</td>\n    <td width=\"49\"> treble</td>\n    <td width=\"96\"> (0 .. 100)|(-100 .. +100)</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\"><i>(not implemented)</i> Adjust the treble boost/cut as specified \n      by p2 within the range 0 to 100. Prefix the number with a + or - to make \n      the change relative. A value of 50 means no boost or cut.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> status</td>\n    <td width=\"49\">&nbsp;</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Return the current status of the player without any change.</td>\n  </tr>\n  <tr> \n    <td width=\"37\"> display </td>\n    <td width=\"49\">&lt;line1&gt;</td>\n    <td width=\"96\">&lt;line2&gt;</td>\n    <td width=\"69\">&lt;duration&gt;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Put text on the player's display. line 1 is specified by p1, \n      line 2 is specified by p2. The text is displayed for a number of seconds \n      as specified by p3. If p3 is omitted, then a default time is used of approximately \n      1.5 seconds.</td>\n  </tr>\n  <tr> \n    <td width=\"37\">button</td>\n    <td width=\"49\">&lt;code&gt;</td>\n    <td width=\"96\">&nbsp;</td>\n    <td width=\"69\">&nbsp;</td>\n    <td width=\"13\">&nbsp;</td>\n    <td width=\"672\">Simulate a button press from the infrared remote, where &lt;code&gt;\n      is a function name per the Default.map file.</td>\n  </tr>\n  <tr>\n    <td>rescan</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>Start a rescan of the music library</td>\n  </tr>\n  <tr>\n    <td>pref</td>\n    <td>&lt;name&gt;</td>\n    <td>&lt;value&gt;</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>Set the value of a preference. Use a value of &quot;?&quot; to get the\n    value in the returned p2 header</td>\n  </tr>\n  <tr>\n    <td>pref</td>\n    <td>&lt;name&gt;</td>\n    <td>?</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>Get the value of a preference. The\n    value is returned in the returned p2 header</td>\n  </tr>\n  <tr>\n    <td>playerpref</td>\n    <td>&lt;name&gt;</td>\n    <td>&lt;value&gt;</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>Set the value of a player specific preference. Use a value of &quot;?&quot; to get the\n    value in the returned p2 header</td>\n  </tr>\n  <tr>\n    <td>playerpref</td>\n    <td>&lt;name&gt;</td>\n    <td>?</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>Get the value of a player-specific preference. The\n    value is returned in the returned p2 header</td>\n  </tr>\n  <tr>\n    <td>debug</td>\n    <td>&lt;flag&gt;</td>\n    <td>&lt;value&gt;</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>Set the value of a debugging variable, for example, set &quot;d_ir&quot; to &quot;1&quot;\n      to have infrared debugging output.</td>\n  </tr>\n</table>\n<a name=csrf></a>\n<h4>CSRF Security Measures</h4>\n<p>To protect against &quot;Cross Site Request Forgery&quot; (CSRF) security threats, Logitech Media Server applies special scrutiny to HTTP requests for functions that can make changes to your system or manipulate playlists or players. \nThis scrutiny is important to understand if you want to &quot;bookmark&quot; such a URL, or control the server via the HTTP interface. \nLogitech Media Server requires one of four things to be true in order to allow such control-oriented URLs to be accepted:<br>\n<dl>\n<dt><em>Referer request header matches Logitech Media Server URL</em>\n<dd>The server will accept an HTTP URL/command if the request includes a &quot;Referer&quot; request header that matches the &quot;Host&quot; request header. \nIf you're using a web browser and clicking on links in the web interface (for instance, the Previous/Skip/Play/Pause links on the right-hand player pane), your browser will send a Referer header that tells Logitech Media Server it's following a link you clicked on from a Logitech Media Server page, and the request will be accepted. \nIf you are using custom software to make the HTTP requests, simply make sure the HTTP request includes a Referer header with the same value as the URL you are requesting, and a Host header that includes the :port information (as described in <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.23\">the HTTP standard</a>) and all will be fine.\n</dd>\n</dt>\n<dt><em>Submission includes form-specific token</em>\n<dd>The server embeds special authorization tokens in most settings pages in the web interface. If a request includes a\nvalid form authorization token, it will be processed.\n</dd>\n</dt>\n<dt><em>&quot;cauth&quot; URL parameter presented and valid</em>\n<dd>If you're using a Bookmark/Favorite, no Referer request header is sent. \nIn such a case, the server cannot tell if your request is legitimate, or your browser following an &lt;IMG&gt; tag in a hostile web page or HTML email. \nIn such cases, you will see a &quot;403 Forbidden&quot; error page. \nOn this page you'll see a URL similar to what you requested, but with a &quot;;cauth=&quot; parameter added to the end, e.g. when denying a bookmarked request for <code>http://10.0.1.201:9000/status.html?p0=rescan</code>, the server will offer you a clickable link with a URL like <br><br>\n<code>http://10.0.1.201:9000/status.html?p0=rescan;cauth=aa2d378f7e9f18611e951e7c6b30eea8</code><br><br>\nBy clicking on this link, you can execute your HTTP command. \nIf you want to bookmark a URL that gives such an error, bookmark the &quot;cauth&quot; URL displayed on the error page. \n<!--\nWhen the server displays such errors, it also sends a special &quot;X-Slim-Auth-URI&quot; response header to the client which contains the URI (e.g., <code>X-Slim-Auth-URI: /status.html?p0=rescan;cauth=aa2d378f7e9f18611e951e7c6b30eea8</code> that matches the URL shown in the body of the 403 error.\n-->\n&quot;cauth&quot; URIs are unique for each Logitech Media Server installation. They are based on a special &quot;securitySecret&quot; that is randomly assigned the first time you start the server software.\nThis allows the same URL like\n<code>http://10.0.1.201:9000/status.html?p0=rescan;cauth=aa2d378f7e9f18611e951e7c6b30eea8</code> \nto always work on your server installation (so you can bookmark it or use it in your home automation system), but not work on another server setup.\nThis unpredicatbility makes it virtually impossible for a hostile web site to trick your server into doing something you don't want.\n<br><br>\nBy default, the same &quot;cauth&quot; value is accepted for any URI.\nSo once you note the &quot;cauth&quot; value for your system, you can use that same value with any URI/command documented here.\nThis is the &quot;MEDIUM&quot; level for the &quot;csrfProtectionLevel&quot; server preference.\nIf you have trouble using the web interface -- for instance, some non-standard browsers do not send &quot;Referer&quot; headers with their requests -- you may change your csrfProtectionLevel to &quot;NONE&quot;. This is generally not recommended, but is available to you.\n<br><br>\nIf you want greater protection against CSRF attacks, you may set your csrfProtectionLevel server preference to &quot;HIGH&quot; so that each different command/URI will insist on a unique (but reusable) &quot;cauth=&quot; value.\nFor instance, the &quot;cauth&quot; parameter for <code>http://10.0.1.201:9000/status.html?p0=playlist&p1=play&p2=soothing</code> would be completely different for the parameter for <code>http://10.0.1.201:9000/status.html?p0=playlist&p1=play&p2=loud-alarm</code>\nThis also makes it more difficult for an attacker to trick your server into doing something you don't want.\n</dd>\n</dt>\n<dt><em>Request appears to be an AJAX/XmlHttpRequest call</em>\n<dd>Requests bearing X-Requested-With headers indicating that they are legitimate XmlHttpRequest calls will be allowed, \nas Javascript/XmlHttpRequest security guidelines and the server username/password authentication should make\nAJAX/XmlHttpRequest calls safe to act on.\n</dd>\n</dt>\n</dl>\n<h4>Multiple Players</h4>\n<p>Finally, if more than one player is connected to the system, you can specify that player with a unique player identifier for the device being controlled. This unique identifier is generated when the player connects. This identifier may be in the form of an IP address or MAC address, depending on the kind of client that's connecting.</p>\n\n<p>For example, the following pauses the player and then returns the status as an HTML page for the player at IP address 10.0.1.202:</p>\n<pre>http://10.0.1.201:9000/status.html?p0=pause&amp;p1=1&amp;player=10.0.1.202</pre>\n<p>For example, the following pauses the player and then returns the status as an HTML page for the player at MAC address: 04:00:20:12:45:AB</p>\n<pre>http://10.0.1.201:9000/status.html?p0=pause&amp;p1=1&amp;player=04:00:20:12:45:AB</pre>\n<p>Examples</p>\n<p>The following plays the song &quot;10,000 Maniacs/Blind Man's Zoo/01. Eat for \n  Two.mp3&quot; in the library and returns the status as an HTML page:</p>\n<pre>http://10.0.1.204:9000/status.html?p0=playlist&amp;p1=play&amp;p2=%2f10,000%20Maniacs%2fBlind%20Man's%20Zoo%2f01.%20Eat%20for%20Two.mp3</pre>\n<p>The following adds every song in the directory &quot;10,000 Maniacs/Blind Man's \n  Zoo/&quot; to the end of the playlist and returns the current player's playlist \n  as an M3U file:</p>\n<pre>http://10.0.1.204:9000/status.m3u?p0=playlist&amp;p1=add&amp;p2=%2f10,000%20Maniacs%2fBlind%20Man's%20Zoo\n</pre>\n<p>The following displays &quot;Danger Will Robinson&quot; on line 1 and &quot;Hi \n  Mom&quot; on the second line for five seconds, and sends an empty response:</p>\n<pre>http://10.0.1.204:9000/status?p0=display&amp;p1=Danger%20Will%20Robinson&amp;p2=Hi%20Mom&amp;p3=5\n</pre>\n<p>The following simulates a press of the MENU button on the infrared remote and \n  sends a response of a two line text document containing the text shown on the \n  display:</p>\n<pre>http://10.0.1.204:9000/status.txt?p0=button&amp;p1=menu</pre>\n<p>Valid button codes correspond to the functions defined in the Default.map file: add&quot;, &quot;brightness_down&quot;, &quot;brightness_toggle&quot;, &quot;brightness_up&quot;, &quot;done&quot;, &quot;down&quot;, &quot;fire&quot;, &quot;jump_fwd&quot;, &quot;jump_rew&quot;, &quot;left&quot;, &quot;left_repeat&quot;, &quot;menu_browse_album&quot;, &quot;menu_browse_artist&quot;, &quot;menu_browse_genre&quot;, &quot;menu_browse_music&quot;, &quot;menu_browse_playlists&quot;, &quot;menu_plugins&quot;, &quot;menu_home&quot;, &quot;menu_now_playing&quot;, &quot;menu_playlist&quot;, &quot;menu_pop&quot;, &quot;menu_search_album&quot;, &quot;menu_search_artist&quot;, &quot;menu_search_song&quot;, &quot;menu_settings&quot;, &quot;muting&quot;, &quot;numberScroll_0&quot;, &quot;numberScroll_1&quot;, &quot;numberScroll_2&quot;, &quot;numberScroll_3&quot;, &quot;numberScroll_4&quot;, &quot;numberScroll_5&quot;, &quot;numberScroll_6&quot;, &quot;numberScroll_7&quot;, &quot;numberScroll_8&quot;, &quot;numberScroll_9&quot;, &quot;pause&quot;, &quot;play&quot;, &quot;play_0&quot;, &quot;play_1&quot;, &quot;playdisp_0&quot;, &quot;playdisp_1&quot;, &quot;playdisp_2&quot;, &quot;playdisp_3&quot;, &quot;playdisp_4&quot;, &quot;playdisp_5&quot;, &quot;playdisp_toggle&quot;, &quot;power_off&quot;, &quot;power_on&quot;, &quot;power_toggle&quot;, &quot;repeat_0&quot;, &quot;repeat_1&quot;, &quot;repeat_2&quot;, &quot;repeat_toggle&quot;, &quot;right&quot;, &quot;right&quot;, &quot;scan_end&quot;, &quot;scan_fwd&quot;, &quot;scan_rew&quot;, &quot;search&quot;, &quot;shuffle_off&quot;, &quot;shuffle_on&quot;, &quot;shuffle_toggle&quot;, &quot;sleep&quot;, &quot;slimtrisButtonHandler_add&quot;, &quot;slimtrisButtonHandler_down&quot;, &quot;slimtrisButtonHandler_left&quot;, &quot;slimtrisButtonHandler_play&quot;, &quot;slimtrisButtonHandler_right&quot;, &quot;slimtrisButtonHandler_up&quot;, &quot;stop&quot;, &quot;textsize_large&quot;, &quot;textsize_small&quot;, &quot;textsize_medium&quot; (on displays that support it), &quot;textsize_toggle&quot;, &quot;titleFormat&quot;, &quot;up&quot;, &quot;volume_down&quot;, &amp; &quot;volume_up&quot;.</p>\n<p>Finally, static content may be served by the player by placing the content \n  in the 'html' subdirectory within the root content directory for the HTTP server. \n  For example:</p>\n<pre>http://10.0.1.201:9000/html/test.html</pre>\n<p>This will return the file test.html within the 'html' subdirectory in the root \n  content directory for the http server. Currently this resides in:</p>\n<pre>slim/server/html/EN/html/test.html</pre>\n<h4>\n  Player Status\n</h4>\n<p>When you use the HTTP interface to control the server (and player) to \n  obtain status the server returns a response that contains:</p>\n<ul>\n  <li>A header indicating a content type</li>\n  <li>Several headers indicating the status of the player</li>\n  <li>A response body </li>\n</ul>\n<p>You can use one of five basic URL formats: </p>\n<table border=\"1\">\n  <tr> \n    <td><b>URL Format</b></td>\n    <td><b>Content Returned</b></td>\n    <td><b>&quot;content-type:&quot; Header Value</b></td>\n  </tr>\n  <tr> \n    <td> \n      <p>http://host:port/status</p>\n    </td>\n    <td>No content</td>\n    <td>(none)</td>\n  </tr>\n  <tr> \n    <td>http://host:port/status.html</td>\n    <td>Human readable HTML page indicating the status of the player</td>\n    <td>text/html</td>\n  </tr>\n  <tr> \n    <td> \n      <p>http://host:port/xml/status.xml</p>\n      <p></p>\n    </td>\n    <td>XML data indicating the status of the player (see \n  <a href=\"xml_skin.html\">The XML Skin</a> documentation)</td>\n    <td>text/xml</td>\n  </tr>\n  <tr> \n    <td>http://host:port/status.m3u</td>\n    <td>M3U playlist file</td>\n    <td>audio/x-mpegurl</td>\n  </tr>\n  <tr> \n    <td> \n      <p>http://host:port/status.txt</p>\n      <p></p>\n    </td>\n    <td>Plain text of player's display contents</td>\n    <td>text/plain</td>\n  </tr>\n</table>\n\n<p>The following is an example of an HTTP status transactions.  \nThe text in blue is sent from the client to the HTTP server.  \nText in red is returned by the HTTP server.\n</p>\n<pre><font color=\"#0000FF\">\nGET /status.html?p0=pause&amp;p1=1 HTTP/1.0\n</font>\n<font color=\"#FF0000\">\n\nHTTP/1.0 200 OK\nContent-Type: audio/x-mpegurl\n\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/01. Excursions.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/02. Buggin' Out.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/03. Rap Promoter.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/04. Butter.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/05. Verses From The Abstrac.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/06. Show Business.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/07. Vibes And Stuff.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/08. The Infamous Date Rape.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/09. Check The Rhime.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/10. Everything Is Fair.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/11. Jazz (We've Got).mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/12. Skypager.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/13. What?.mp3\n/Volumes/10.0.1.201/A Tribe Called Quest/The Low End Theory/14. Scenario.mp3</font>\n</pre>\n\n";
#line 502 "/usr/share/squeezeboxserver/HTML/EN/html/docs/http.html"
    $output .=  $context->process('helpfooter.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
