#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1518618963',
        'name' => '/usr/share/squeezeboxserver/HTML/EN/select_option.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/EN/select_option.html"
    if ($stash->get('maxLength')) {
#line 1 "/usr/share/squeezeboxserver/HTML/EN/select_option.html"
    
    # CAPTURE
    $stash->set('value', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('truncate', [ $stash->get('maxLength') ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    }
    
    $output .=  "\n<option ";
#line 2 "/usr/share/squeezeboxserver/HTML/EN/select_option.html"
    if ($stash->get('selected')) {
    $output .=  "selected";
    }
    
    $output .=  " value=\"";
#line 2 "/usr/share/squeezeboxserver/HTML/EN/select_option.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('utf8decode')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('key');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 2 "/usr/share/squeezeboxserver/HTML/EN/select_option.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('value');
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
