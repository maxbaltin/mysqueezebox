#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249312473',
        'name' => '/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 8 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    if ($stash->get('useExtJS')) {
#line 8 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # CAPTURE
    $stash->set('extJsScripts', do {
        my $output = '';
    $output .=  "   \n	<script TYPE=\"text/javascript\">\n		Ext.onReady(function() {\n			Settings.Alarm.init('";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get('newAlarmID');
    $output .=  "', ";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get(['prefs', 0, 'alarms', 0, 'size', 0]);
    $output .=  ");\n			Settings.Alarm.initTimeControls('";
#line 5 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get('timeFormat');
    $output .=  "', '";
#line 5 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get('altFormats');
    $output .=  "');\n		});\n	</script>\n";
        $output;
    });
    
    }
    
    $output .=  "\n";
    
    $output .=  "\n\n";
#line 104 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $context->process('settings/header.html');
    $output .=  "\n\n	";
#line 117 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<select class=\"stdedit\" name=\"pref_alarmsEnabled\" id=\"pref_alarmsEnabled\">\n	\n			";
#line 114 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'ALARM_ON', '0' => 'ALARM_OFF'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 113 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    if ($stash->get(['prefs', 0, 'pref_alarmsEnabled', 0])) {
    $output .=  "selected='selected' ";
    }
    
    $output .=  "value=\"";
#line 113 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 113 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "			\n		</select>\n	";
        $context->include('setting', { 'title' => 'ALARM_ALL_ALARMS', 'desc' => 'ALARM_ALARMS_ENABLED_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 123 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    if ($stash->get('useExtJS') || $stash->get('useAJAX')) {
    $output .=  "\n		";
#line 122 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<input name=\"AddAlarm\" id=\"AddAlarm\" type=\"button\" class=\"stdclick\" value=\"";
#line 121 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'ALARM_ADD';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n		";
        $context->include('setting', { 'title' => 'ALARM_NEW', 'desc' => 'ALARM_ADD_DESC', 'sectionID' => 'button'  . $stash->get('newAlarmID'), 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	<div class=\"alarmSection\">\n	";
#line 126 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $stash->set('alarmTitle', 'ALARM_NEW');
#line 126 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $stash->set('sectionID', 'alarm'  . $stash->get('newAlarmID'));
#line 126 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $stash->set('customStyle', $stash->get('useExtJS') ? 'display:none' : '');
    $output .=  "\n	";
#line 127 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $context->process('alarmSetting', { 'alarm' => { 'id' => $stash->get('newAlarmID'), 'day' => 1, 'enabled' => 1, 'repeat' => 1  } });
    $output .=  "\n	";
#line 133 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $stash->set('alarmTitle', '');
#line 133 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $stash->set('customStyle', '');
    $output .=  "\n	</div>\n\n	<div class=\"alarmSection\">\n	";
#line 139 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['prefs', 0, 'alarms', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'alarm'} = $_tt_value;
    $output .=  "\n		";
#line 138 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $context->process('alarmSetting');
    $output .=  "\n	";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n	</div>\n	\n	";
#line 146 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_alarmDefaultVolume' ]])) {
    $output .=  "\n	";
#line 145 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<input type=\"text\" class=\"stdedit sliderInput_0_100\" name=\"pref_alarmDefaultVolume\" id=\"alarmDefaultVolume\" value=\"";
#line 144 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get(['prefs', 0, 'pref_alarmDefaultVolume', 0]);
    $output .=  "\" size=\"3\">\n	";
        $context->include('setting', { 'title' => 'ALARM_VOLUME', 'desc' => 'ALARM_VOLUME_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 150 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<input type=\"text\" class=\"stdedit sliderInput_1_30\" name=\"pref_alarmSnoozeMinutes\" id=\"alarmSnoozeMinutes\" value=\"";
#line 149 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get(['prefs', 0, 'pref_alarmSnoozeMinutes', 0]);
    $output .=  "\" size=\"3\">\n	";
        $context->include('setting', { 'title' => 'SETUP_SNOOZE_MINUTES', 'desc' => 'SETUP_SNOOZE_MINUTES_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 154 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<input type=\"text\" class=\"stdedit sliderInput_0_90\" name=\"pref_alarmTimeoutMinutes\" id=\"pref_alarmTimeoutMinutes\" value=\"";
#line 153 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get(['prefs', 0, 'pref_alarmTimeoutMinutes', 0]);
    $output .=  "\" size=\"3\">\n	";
        $context->include('setting', { 'title' => 'SETUP_ALARM_TIMEOUT', 'desc' => 'SETUP_ALARM_TIMEOUT_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 167 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<select class=\"stdedit\" name=\"pref_alarmfadeseconds\" id=\"pref_alarmfadeseconds\">\n	\n			";
#line 164 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'YES', '0' => 'NO'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 163 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    if ($stash->get(['prefs', 0, 'pref_alarmfadeseconds', 0])) {
    $output .=  "selected='selected' ";
    }
    
    $output .=  "value=\"";
#line 163 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 163 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "			\n		</select>\n	";
        $context->include('setting', { 'title' => 'ALARM_FADE', 'desc' => '', 'content', $output }); 
    };
    
    $output .=  "\n\n	<div>&nbsp;</div>\n	";
#line 174 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    if ($stash->get('useAJAX')) {
    $output .=  "\n	<script TYPE=\"text/javascript\">\n		initNewAlarm('";
#line 172 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $stash->get('newAlarmID');
    $output .=  "');\n	</script>\n	";
    }
    
    $output .=  "\n";
#line 175 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
    $output .=  $context->process('settings/footer.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'alarmSetting' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	";
#line 100 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n\n		";
#line 12 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # CAPTURE
        $stash->set('alarmTitle', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get('alarmTitle') ? $stash->get('alarmTitle') : 'ALARM_ALARM');
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        $output .=  "\n		";
#line 25 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			<select class=\"stdedit\" name=\"alarm_enable";
#line 14 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" id=\"alarm_enable";
#line 14 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\">\n		\n				";
#line 21 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = { '1' => 'ALARM_ON', '0' => 'ALARM_OFF'  };
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'option'} = $_tt_value;
        $output .=  "\n					<option ";
#line 20 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        if ($stash->get(['alarm', 0, 'enabled', 0]) eq $stash->get(['option', 0, 'key', 0])) {
        $output .=  "selected='selected' ";
        }
        
        $output .=  "value=\"";
#line 20 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['option', 0, 'key', 0]);
        $output .=  "\">";
#line 20 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['option', 0, 'value', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "				\n			</select>\n			<input type=\"hidden\" name=\"alarm_id_";
#line 24 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" value=\"1\">\n		";
            $context->include('settingGroup', { 'title' => $stash->get('alarmTitle')  . ' '  . $stash->get(['loop', 0, 'count', 0]), 'desc' => '', 'content', $output }); 
        };
        
        $output .=  "\n	\n		<div class=\"settingGroup\">\n			<div class=\"prefHead\" style=\"font-weight:normal;\">";
#line 28 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'ALARM_SET';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</div>\n			<div class=\"prefs\" style=\"max-height:14px\">\n				<input type=\"text\" class=\"stdedit timeControl\" name=\"alarmtime";
#line 30 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" id=\"alarmtime";
#line 30 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" value=\"";
#line 30 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'timeStr', 0]);
        $output .=  "\" size=\"15\">\n			&nbsp;</div>\n		</div>\n	\n		";
#line 34 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # CAPTURE
        $stash->set('alarmTitle', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'ALARM_SET_DAYS';
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        $output .=  "\n		";
#line 41 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			";
#line 40 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = [ 1..7 ];
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'day'} = $_tt_value;
        $output .=  "\n				";
#line 37 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $stash->set('day', $stash->get('day') % 7);
        $output .=  "\n				<input type=\"checkbox\" name=\"alarmday";
#line 38 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
#line 38 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get('day');
        $output .=  "\" id=\"alarmday";
#line 38 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
#line 38 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get('day');
        $output .=  "\" value=\"1\" ";
#line 38 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'day', [ $stash->get('day') ]]) ? 'checked' : '';
        $output .=  ">\n				<label for=\"alarmday";
#line 39 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
#line 39 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get('day');
        $output .=  "\">";
#line 0 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  ("ALARM_DAY" . $stash->get('day'));
            
            &$_tt_filter($output);
        };
        
        $output .=  "&nbsp;&nbsp;</label>\n			";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n		";
            $context->include('settingGroup', { 'title' => '<div style="font-weight:normal;">'  . $stash->get('alarmTitle')  . '</div>', 'desc' => '', 'content', $output }); 
        };
        
        $output .=  "\n	\n		";
#line 43 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # CAPTURE
        $stash->set('alarmTitle', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'ALARM_SELECT_PLAYLIST';
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        $output .=  "\n		";
#line 56 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			<select class=\"stdedit\" name=\"alarmplaylist";
#line 45 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" id=\"alarmplaylist";
#line 45 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\">\n		\n				";
#line 53 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get('playlistOptions');
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'playlistType'} = $_tt_value;
        $output .=  "\n					<optgroup label=\"";
#line 48 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['playlistType', 0, 'type', 0]);
        $output .=  "\">\n						";
#line 51 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['playlistType', 0, 'items', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'playlist'} = $_tt_value;
        $output .=  "\n							<option ";
#line 50 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        if ($stash->get(['alarm', 0, 'playlist', 0]) eq $stash->get(['playlist', 0, 'url', 0])) {
        $output .=  "selected ";
        }
        
        $output .=  "value=\"";
#line 50 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['playlist', 0, 'url', 0]);
        $output .=  "\">";
#line 50 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['playlist', 0, 'title', 0]);
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "					</optgroup>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "				\n			</select>\n		";
            $context->include('settingGroup', { 'title' => '<div style="font-weight:normal;">'  . $stash->get('alarmTitle')  . '</div>', 'desc' => '', 'content', $output }); 
        };
        
        $output .=  "\n	\n		";
#line 58 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # CAPTURE
        $stash->set('alarmTitle', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'SHUFFLE';
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        $output .=  "\n		";
#line 71 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			<select class=\"stdedit\" name=\"alarm_shufflemode";
#line 60 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" id=\"alarm_shufflemode";
#line 60 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\">\n\n				";
#line 68 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = { '0' => 'SHUFFLE_OFF', '1' => 'SHUFFLE_ON_SONGS', '2' => 'SHUFFLE_ON_ALBUMS'  };
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'option'} = $_tt_value;
        $output .=  "\n					<option ";
#line 67 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        if ($stash->get(['alarm', 0, 'shufflemode', 0]) eq $stash->get(['option', 0, 'key', 0])) {
        $output .=  "selected='selected' ";
        }
        
        $output .=  "value=\"";
#line 67 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['option', 0, 'key', 0]);
        $output .=  "\">";
#line 67 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['option', 0, 'value', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "\n			</select>\n		";
            $context->include('settingGroup', { 'title' => '<div style="font-weight:normal;">'  . $stash->get('alarmTitle')  . '</div>', 'desc' => '', 'content', $output }); 
        };
        
        $output .=  "\n\n		";
#line 73 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # CAPTURE
        $stash->set('alarmTitle', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'ALARM_ALARM_REPEAT';
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
        $output .=  "\n		";
#line 97 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			<select class=\"stdedit\" name=\"alarm_repeat";
#line 75 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" id=\"alarm_repeat";
#line 75 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\">\n		\n				";
#line 82 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = { '1' => 'YES', '0' => 'NO'  };
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'option'} = $_tt_value;
        $output .=  "\n					<option ";
#line 81 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        if ($stash->get(['alarm', 0, 'repeat', 0]) eq $stash->get(['option', 0, 'key', 0])) {
        $output .=  "selected='selected' ";
        }
        
        $output .=  "value=\"";
#line 81 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['option', 0, 'key', 0]);
        $output .=  "\">";
#line 81 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['option', 0, 'value', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</option>";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        $output .=  "			\n			</select>\n\n			";
#line 96 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        if ($stash->get(['alarm', 0, 'id', 0]) ne $stash->get('newAlarmID') || $stash->get('useAJAX') || $stash->get('useExtJS')) {
        $output .=  "\n				<div>\n					<br/>\n					<input name=\"alarm_remove_";
#line 89 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\" \n						type=\"";
#line 90 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get('useExtJS') && $stash->get(['alarm', 0, 'id', 0]) eq $stash->get('newAlarmID') ? 'button' : 'submit';
        $output .=  "\" \n						class=\"stdclick removeButton\" \n						value=\"";
#line 92 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get(['alarm', 0, 'id', 0]) eq $stash->get('newAlarmID') ? 'CANCEL' : 'ALARM_DELETE');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" \n						onClick=\"";
#line 93 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]) eq $stash->get('newAlarmID') ? 'return false;' : '';
        $output .=  "\" \n						id=\"alarm_remove_";
#line 94 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $output .=  $stash->get(['alarm', 0, 'id', 0]);
        $output .=  "\">\n				</div>\n			";
        }
        
        $output .=  "\n		";
            $context->include('settingGroup', { 'title' => '<div style="font-weight:normal;">'  . $stash->get('alarmTitle')  . '</div>', 'desc' => 'ALARM_ALARM_REPEAT_DESC', 'content', $output }); 
        };
        
        $output .=  "\n		";
#line 98 "/usr/share/squeezeboxserver/HTML/EN/settings/player/alarm.html"
        $stash->set('alarmTitle', '');
        $output .=  "\n	\n	";
            $context->include('settingSection', { 'content', $output }); 
        };
        
        $output .=  "\n\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
