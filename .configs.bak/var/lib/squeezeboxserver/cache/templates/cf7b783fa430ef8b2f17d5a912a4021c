#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'statecontrol.html',
        'modtime' => '1249312473',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if (! $stash->get('notext')) {
#line 1 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('state');
        
        &$_tt_filter($output);
    };
    
#line 1 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('stringCOLON');
    }
    
    $output .=  "\n";
#line 5 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('modes');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get($stash->get('state')) ne $stash->get(['loop', 0, 'index', 0]) || $stash->get('activelink')) {
    $output .=  "<a ";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get('classdef')) {
    $output .=  "class=";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('classdef');
    }
    
    $output .=  "href=\"status.html?p0=playlist&amp;p1=";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('state');
    $output .=  "&amp;p2=";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "&amp;player=";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('playerURI');
    $output .=  "&amp;start=";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('start');
    $output .=  "\">";
    }
    
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get($stash->get('state')) eq $stash->get(['loop', 0, 'index', 0])) {
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('activeon') || '<b>';
    }
    
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get('nolower')) {
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
    }
    else {
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('lower')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('type');
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    }
    
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get($stash->get('state')) eq $stash->get(['loop', 0, 'index', 0])) {
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('activeoff') || '</b>';
    }
    
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get($stash->get('state')) ne $stash->get(['loop', 0, 'index', 0]) || $stash->get('activelink')) {
    $output .=  "</a>";
    }
    
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if (! $stash->get(['loop', 0, 'last', 0])) {
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    if ($stash->get('separator')) {
#line 4 "/usr/share/squeezeboxserver/HTML/EN/statecontrol.html"
    $output .=  $stash->get('separator');
    }
    else {
    $output .=  "/";
    }
    
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
