#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249312473',
        'name' => 'helpheader.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    
    $output .=  "\n";
#line 4 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    
    # CAPTURE
    $stash->set('helptitle', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'HELP';
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n";
#line 8 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    if (! $stash->get('noCrumbList')) {
#line 8 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    
    # CAPTURE
    $stash->set('pageHeaderMenu', do {
        my $output = '';
    $output .=  "\n	";
#line 6 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    if ($stash->get('techinfo')) {
    $output .=  "<a href=\"";
#line 6 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/docs/index.html?player=";
#line 6 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    $output .=  $stash->get('playerURI');
    $output .=  "\">";
#line 6 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'TECHNICAL_INFORMATION';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</a> &gt;";
    }
    
    $output .=  "\n	";
#line 7 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    $output .=  $stash->get('pagetitle');
    $output .=  "\n";
        $output;
    });
    
    }
    
    $output .=  "\n";
#line 9 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    if ($stash->get('pageHeaderMenu') && ! $stash->get('pwd_list')) {
    $stash->set('pwd_list', $stash->get('pageHeaderMenu'));
    }
    
#line 10 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
    $output .=  $context->process('pageheader.html', { 'page' => 'help', 'useSpecialExt' => '-browse' });
    $output .=  "\n	<div class=\"helpsection\">\n			";
    
    $output .=  "\n			";
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'helpTopic' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n				<div class=\"selectorMarker\" onmouseover=\"Highlighter.highlight(this);\" id=\"";
#line 20 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('href');
        $output .=  "\">\n					<div class=\"homeMenuItem\" id=\"";
#line 21 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('token');
#line 21 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        if ($stash->get('category')) {
        $output .=  ":";
#line 21 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('category');
        }
        
        $output .=  "\">\n						<a href=\"";
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('href');
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        if (! $stash->get(['url', 0, 'match', [ '^http' ]])) {
        $output .=  "?player=";
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('playerURI');
        }
        
        $output .=  "\" ";
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        if ($stash->get('target')) {
        $output .=  "target=\"";
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('target');
        $output .=  "\" ";
        }
        
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        if ($stash->get(['href', 0, 'match', [ '^http:' ]])) {
        $output .=  "target=\"_new\" ";
        }
        
        $output .=  " class=\"browseItemLink\">";
#line 22 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('title');
        $output .=  "</a>\n					</div>\n				</div>\n			";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'homelink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        
        # CAPTURE
        $stash->set('homeString', do {
            my $output = '';
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'HELP';
            
            &$_tt_filter($output);
        };
        
            $output;
        });
        
#line 1 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  ('' . "<a href=\"");
#line 1 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('webroot');
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  ("home.html?page=help&amp;player=" . $stash->get('playerURI') . "\"");
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        if ($stash->get('target')) {
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  ('' . "target=\"");
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get($stash->get('target'));
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  ('' . "\"");
        }
        
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  '>';
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('img') || $stash->get('homeString');
#line 0 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  '</a>';
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'helpTopicList' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n			<img src=\"";
#line 13 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('webroot');
        $output .=  "html/images/questionmark.gif\" id=\"questionmark\">\n			<div id=\"helpsection\">\n				";
#line 15 "/usr/share/squeezeboxserver/HTML/Default/helpheader.html"
        $output .=  $stash->get('content');
        $output .=  "			</div>\n			";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
