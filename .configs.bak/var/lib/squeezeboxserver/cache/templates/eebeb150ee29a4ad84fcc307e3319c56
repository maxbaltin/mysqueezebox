#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'pageheader.html',
        'modtime' => '1249312473',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n	<head>\n		";
#line 5 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $context->process('standardheader.html');
    $output .=  "\n		\n		";
#line 12 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    if ($stash->get('pageHeaderScripts')) {
    $output .=  "\n			";
#line 8 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $stash->get('pageHeaderScripts');
    $output .=  "\n		";
    }
    else {
    $output .=  "\n			<script TYPE=\"text/javascript\">";
#line 10 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $context->process('html/vars.js');
    $output .=  "</script>\n			<script TYPE=\"text/javascript\" src=\"";
#line 11 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/common.js?r=";
#line 11 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $stash->get('revision');
    $output .=  "\"></script>\n		";
    }
    
    $output .=  "\n\n		<!--[if IE]>\n		<style type=\"text/css\">\n			body {width: 97%;}\n			.thumbwrap li, .thumbwrap {\n				display: inline;\n				height: 0;\n				he\\ight: auto;\n			}\n		</style>\n		<![endif]-->\n	</head>\n	<body  ";
#line 25 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $stash->get('bodyscript');
    $output .=  ">\n	";
#line 32 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    if ($stash->get('pagetitle')) {
    $output .=  "\n		<div class=\"largeAttribute\">";
#line 27 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('pagetitle');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n		";
#line 30 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    if ($stash->get('artwork') && $stash->get('hasArtwork')) {
    $output .=  "\n			";
#line 29 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'GALLERY';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n		";
    }
    
    $output .=  "\n		</div>\n	";
    }
    
    $output .=  "\n	\n	";
#line 34 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $context->process('galleryselect.html');
    $output .=  "\n	\n	<div id=\"statusMessage\">\n		";
#line 37 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    if ($stash->get('pageHeaderMenu') && ! $stash->get('pwd_list')) {
    $stash->set('pwd_list', $stash->get('pageHeaderMenu'));
    }
    
#line 38 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    if ($stash->get('pwd_list')) {
    $output .=  $context->process('crumblist');
    }
    
    $output .=  "\n	</div>\n	<div id=\"pageHeaderInfo\">\n		";
#line 41 "/usr/share/squeezeboxserver/HTML/EN/pageheader.html"
    $output .=  $stash->get('pageHeaderInfo');
    $output .=  "\n	</div>\n	<div id=\"homeMenu\">";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
